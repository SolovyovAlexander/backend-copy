version: '3.7'

services:
  web:
    build:
      context: ./
      dockerfile: Dockerfile.prod
    command: gunicorn backend.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/backend/web/staticfiles
      - media_volume:/home/backend/web/mediafiles
    expose:
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - rabbitmq
  db:
    image: postgres:12.0-alpine
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=
      - POSTGRES_PASSWORD=
      - POSTGRES_DB=
  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/backend/web/staticfiles
      - media_volume:/home/backend/web/mediafiles
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    depends_on:
      - web
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  rabbitmq:
    image: rabbitmq:3
    ports:
      - 5672:5672
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password

  celery:
    build:
      context: ./
      dockerfile: Dockerfile.prod
    command: celery -A backend worker -l INFO
    volumes:
      - ./:/usr/src/backend/
    env_file:
      - ./.env.prod
    depends_on:
      - rabbitmq
      - db

  celery-beat:
    build:
      context: ./
      dockerfile: Dockerfile.prod
    command: celery -A backend beat -l INFO
    env_file:
      - ./.env.prod
    volumes:
      - ./:/usr/src/backend/
    depends_on:
      - rabbitmq
      - db




volumes:
  postgres_data:
  static_volume:
  media_volume: